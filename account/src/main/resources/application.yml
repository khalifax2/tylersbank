server:
  port: 7010

spring:
  application:
    name: account
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
  datasource:
    url: jdbc:h2:mem:accountdb
  h2:
    console:
      enabled: true
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

logging:
  level:
    org:
      springframework:
        security: TRACE
    com:
      tylersbank:
        account: DEBUG
  pattern:
    console: ${LOGPATTERN_CONSOLE:%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%logger{15}) - %msg%n}


resilience4j.circuitbreaker: #default waiting 1s for timeout
  configs:
    default:
      slidingWindowSize: 5 # Monitor request
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 20000

resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 100
      enableExponentialBackoff: true
      exponentialBackOffMultiplier: 2
      ignoreExceptions:
        - java.lang.NullPointerException
      retryExceptions: # If you try to define this you don't have to define ignoreExceptions
        - java.util.concurrent.TimeoutException

resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1000
      limitRefreshPeriod: 5000
      limitForPeriod: 1